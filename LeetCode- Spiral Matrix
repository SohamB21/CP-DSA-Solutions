// T.C. = O(m * n)       S.C. = O(m * n)
import java.util.List;
import java.util.LinkedList;

class Solution {
    public List<Integer> spiralOrder(int[][] matrix){
        int left = 0, right = matrix[0].length - 1;
        int top = 0, bottom = matrix.length - 1;
        List<Integer> list = new LinkedList<Integer>();
        
        while(left <= right && top <= bottom){
            //left to right
            if(left <= right){
                for(int i = left; i<=right; i++)
                    list.add(matrix[top][i]);
                top++;
            }
            
            //top to bottom
            if(top <= bottom){
                for(int i = top; i<=bottom; i++)
                    list.add(matrix[i][right]);
                right--;
            }
            
            //right to left
            if(top <= bottom){
                for(int i = right; i>=left; i--)
                    list.add(matrix[bottom][i]);
                bottom--;
            }
            
            //bottom to top
            if(left <= right){
                for(int i = bottom; i>=top; i--)
                    list.add(matrix[i][left]);
                left++;
            }
        }
        return list;
    }
}
