// T.C. = O(n)    S.C. = O(n)
import java.util.HashMap;
class Solution {
    private HashMap<Integer, Integer> optimizedMap = new HashMap<>();
    public int fib(int n) {
        if(n == 0)
            optimizedMap.put(0, 0);
        else if(n == 1)
            optimizedMap.put(1, 1);
        else if(! optimizedMap.containsKey(n))
            optimizedMap.put(n, fib(n-1) + fib(n-2));
        
        return optimizedMap.get(n);
    }
}
/*
// T.C. = O(GoldenRatio n)    S.C. = O(1)
class Solution {
    public int fib(int n) {
        if(n == 0)
            return 0;
        if(n == 1)
            return 1;
        return fib(n-1) + fib(n-2);
    }
}
*/
