// T.C. = O(n)      S.C. = O(1)
class Solution
{
    // function to reverse a list
    private static Node reverseList(Node head){
        Node prev = null, curr = head, next = null;
        while(curr != null){
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
    // function to add 1 to the reverse list
    private static Node addOneToRev(Node head){
        Node newList = head, temp = null;
        int carry = 1, sum;
        
        while(head != null){
            sum = carry + head.data;
            carry = (sum >= 10) ? 1 : 0;
            head.data = sum % 10;
            temp = head;
            head = head.next;
        }
        if(carry > 0)
            temp.next = new Node(carry);
        
        return newList;
    }
    
    public static Node addOne(Node head) 
    {
        // reverse given list
        head = reverseList(head);
        // adds 1 to the reversed list
        head = addOneToRev(head);
        // reverse list again
        return reverseList(head);
    }
}
